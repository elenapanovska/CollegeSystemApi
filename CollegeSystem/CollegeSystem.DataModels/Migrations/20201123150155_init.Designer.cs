// <auto-generated />
using CollegeSystem.DataModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CollegeSystem.DataModels.Migrations
{
    [DbContext(typeof(CollegeDbContext))]
    [Migration("20201123150155_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CollegeSystem.DataModels.Models.Student", b =>
                {
                    b.Property<int>("StudentNumberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("StudentNumberID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentNumberID = 1,
                            Email = "bob.bobsky@gmail.com",
                            FullName = "Bob Bobsky",
                            MobilePhone = "38971634256"
                        },
                        new
                        {
                            StudentNumberID = 2,
                            Email = "jill.wayne@gmail.com",
                            FullName = "Jill Wayne",
                            MobilePhone = "38971567489"
                        });
                });

            modelBuilder.Entity("CollegeSystem.DataModels.Models.Subject", b =>
                {
                    b.Property<int>("SubjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.HasKey("SubjectID");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectID = 1,
                            Credits = 3,
                            Name = "Mathematics",
                            Semester = 1
                        },
                        new
                        {
                            SubjectID = 2,
                            Credits = 5,
                            Name = "English",
                            Semester = 2
                        },
                        new
                        {
                            SubjectID = 3,
                            Credits = 10,
                            Name = "Programming and Advanced Programming",
                            Semester = 2
                        });
                });

            modelBuilder.Entity("StudentSubject", b =>
                {
                    b.Property<int>("StudentsStudentNumberID")
                        .HasColumnType("int");

                    b.Property<int>("SubjectsSubjectID")
                        .HasColumnType("int");

                    b.HasKey("StudentsStudentNumberID", "SubjectsSubjectID");

                    b.HasIndex("SubjectsSubjectID");

                    b.ToTable("StudentSubject");
                });

            modelBuilder.Entity("StudentSubject", b =>
                {
                    b.HasOne("CollegeSystem.DataModels.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsStudentNumberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CollegeSystem.DataModels.Models.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectsSubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
